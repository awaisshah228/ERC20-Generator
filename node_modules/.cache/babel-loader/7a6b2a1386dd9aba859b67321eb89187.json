{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkit29/Desktop/erc20-asset/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkit29/Desktop/erc20-asset/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pulkit29/Desktop/erc20-asset/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pulkit29/Desktop/erc20-asset/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pulkit29/Desktop/erc20-asset/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pulkit29/Desktop/erc20-asset/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pulkit29/Desktop/erc20-asset/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pulkit29/Desktop/erc20-asset/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from \"./components/Header.js\";\nimport './App.css';\nimport Web3 from 'web3';\nimport Form from \"./components/Form.js\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //from 2NOv 2018 onwards this convention will be followed\n              web3 = new Web3(window.ethereum);\n              _context.prev = 1;\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n\n              if (accounts.length) {\n                console.log(accounts);\n\n                _this.setState({\n                  account: accounts[0],\n                  web3: web3\n                });\n              } else {\n                alert(\"You've locked your MetaMask\");\n              }\n\n              web3.currentProvider.publicConfigStore.on('update', function (res) {\n                _this.setState({\n                  account: res.selectedAddress\n                });\n\n                console.log(_this.state.account);\n              });\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 11]]);\n    }));\n    _this.state = {\n      account: null,\n      incorrect: false,\n      web3: undefined\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"generateToken\",\n\n    /* Handle form submission */\n    value: function generateToken(symbol, name, supply, decimals) {\n      var contact = this.state.web3.eth.contract.new(process.env.ABI, {\n        from: web3.eth.accounts[0],\n        data: process.env.BYTECODE\n      });\n\n      if (typeof contact.address !== 'undefined') {\n        console.log('Contract mined! address: ' + contact.address + ' transactionHash: ' + contact.transactionHash);\n      } //  var standardtokenContract = this.state.web3.eth.contract(process.env.ABI);\n      //  var standardToken=standardtokenContract.new(supply,\n      //   name,\n      //   symbol,\n      //   decimals,\n      //   {\n      //     from:this.state.web3.eth.accounts[0]\n      //   },function(err,result){\n      //     if(err) console.log(err);\n      //     console.log(result);\n      //   }\n      //   )\n\n    } //render//\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var metam;\n\n      if (this.state.account == null || this.state.account === undefined) {\n        metam = React.createElement(\"div\", {\n          className: \"metamask\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-circle\",\n          style: {\n            \"color\": \"red\",\n            \"margin\": \"4px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), \"Metamask Locked\");\n      } else {\n        metam = React.createElement(\"div\", {\n          className: \"metamask\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-circle\",\n          style: {\n            \"color\": \"green\",\n            \"margin\": \"4px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), \"Metamask Unlocked\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), metam, React.createElement(Form, {\n        genrateToken: this.generateToken.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/pulkit29/Desktop/erc20-asset/src/App.js"],"names":["React","Component","Header","Web3","Form","App","componentDidMount","web3","window","ethereum","enable","eth","getAccounts","accounts","length","console","log","setState","account","alert","currentProvider","publicConfigStore","on","res","selectedAddress","state","incorrect","undefined","symbol","name","supply","decimals","contact","contract","new","process","env","ABI","from","data","BYTECODE","address","transactionHash","metam","generateToken","bind"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;IAEMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AADY,UAQdC,iBARc;AAAA;AAAA;AAAA;AAAA,6BAQK;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB;AACMC,cAAAA,IAFW,GAEJ,IAAIJ,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAFI;AAAA;AAAA;AAAA,qBAKTD,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EALS;;AAAA;AAAA;AAAA,qBAOQH,IAAI,CAACI,GAAL,CAASC,WAAT,EAPR;;AAAA;AAOTC,cAAAA,QAPS;;AASf,kBAAIA,QAAQ,CAACC,MAAb,EAAqB;AACnBC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,sBAAKI,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAACL,QAAQ,CAAC,CAAD,CAAjB;AAAqBN,kBAAAA,IAAI,EAACA;AAA1B,iBAAd;AACD,eAHD,MAGO;AACLY,gBAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;;AAEDZ,cAAAA,IAAI,CAACa,eAAL,CAAqBC,iBAArB,CAAuCC,EAAvC,CAA0C,QAA1C,EAAoD,UAAAC,GAAG,EAAI;AACzD,sBAAKN,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAACK,GAAG,CAACC;AAAb,iBAAd;;AACAT,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAKS,KAAL,CAAWP,OAAvB;AACD,eAHD;AAhBe;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARL;AAEZ,UAAKO,KAAL,GAAW;AACTP,MAAAA,OAAO,EAAC,IADC;AAETQ,MAAAA,SAAS,EAAC,KAFD;AAGTnB,MAAAA,IAAI,EAACoB;AAHI,KAAX;AAFY;AAOb;;;;;AAwBF;kCACcC,M,EAAOC,I,EAAKC,M,EAAOC,Q,EAAU;AAC1C,UAAIC,OAAO,GAAG,KAAKP,KAAL,CAAWlB,IAAX,CAAgBI,GAAhB,CAAoBsB,QAApB,CAA6BC,GAA7B,CAAiCC,OAAO,CAACC,GAAR,CAAYC,GAA7C,EAAiD;AAACC,QAAAA,IAAI,EAAE/B,IAAI,CAACI,GAAL,CAASE,QAAT,CAAkB,CAAlB,CAAP;AAA6B0B,QAAAA,IAAI,EAAEJ,OAAO,CAACC,GAAR,CAAYI;AAA/C,OAAjD,CAAd;;AACA,UAAI,OAAOR,OAAO,CAACS,OAAf,KAA2B,WAA/B,EAA4C;AAC1C1B,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BgB,OAAO,CAACS,OAAtC,GAAgD,oBAAhD,GAAuET,OAAO,CAACU,eAA3F;AACH,OAJ2C,CAKxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACF,K,CACD;;;;6BACU;AACP,UAAIC,KAAJ;;AACA,UAAI,KAAKlB,KAAL,CAAWP,OAAX,IAAoB,IAApB,IAA0B,KAAKO,KAAL,CAAWP,OAAX,KAAqBS,SAAnD,EAA8D;AACxDgB,QAAAA,KAAK,GAAG;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACR;AAAG,UAAA,SAAS,EAAC,cAAb;AAA4B,UAAA,KAAK,EAAE;AAAC,qBAAQ,KAAT;AAAe,sBAAS;AAAxB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADQ,oBAAR;AAIL,OALD,MAKO;AACDA,QAAAA,KAAK,GAAG;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACR;AAAG,UAAA,SAAS,EAAC,cAAb;AAA4B,UAAA,KAAK,EAAE;AAAC,qBAAQ,OAAT;AAAiB,sBAAS;AAA1B,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADQ,sBAAR;AAIL;;AACD,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEIA,KAFJ,EAGE,oBAAC,IAAD;AAAM,QAAA,YAAY,EAAE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EAxEe5C,S;;AA2ElB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from \"./components/Header.js\";\nimport './App.css';\nimport Web3 from 'web3';\nimport Form from \"./components/Form.js\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state={\n      account:null,\n      incorrect:false,\n      web3:undefined\n    }\n  }\n  componentDidMount= async () => {\n    //from 2NOv 2018 onwards this convention will be followed\n    const web3 = new Web3(window.ethereum)\n    try {\n      // Request account access if needed\n      await window.ethereum.enable()\n      // Acccounts now exposed\n      const accounts = await web3.eth.getAccounts()\n\n      if (accounts.length) {\n        console.log(accounts);\n        this.setState({account:accounts[0],web3:web3});\n      } else {\n        alert(\"You've locked your MetaMask\")\n      }\n\n      web3.currentProvider.publicConfigStore.on('update', res => {\n        this.setState({account:res.selectedAddress})\n        console.log(this.state.account);\n      })\n    } catch (error) {\n    }\n  }\n /* Handle form submission */\n generateToken(symbol,name,supply,decimals) {\n  var contact = this.state.web3.eth.contract.new(process.env.ABI,{from: web3.eth.accounts[0], data: process.env.BYTECODE});\n  if (typeof contact.address !== 'undefined') {\n    console.log('Contract mined! address: ' + contact.address + ' transactionHash: ' + contact.transactionHash);\n}\n    //  var standardtokenContract = this.state.web3.eth.contract(process.env.ABI);\n    //  var standardToken=standardtokenContract.new(supply,\n    //   name,\n    //   symbol,\n    //   decimals,\n    //   {\n    //     from:this.state.web3.eth.accounts[0]\n    //   },function(err,result){\n    //     if(err) console.log(err);\n    //     console.log(result);\n    //   }\n    //   )\n }\n //render//\n  render() {\n    let metam; \n    if (this.state.account==null||this.state.account===undefined) {\n          metam = <div className=\"metamask\">\n          <i className=\"fa fa-circle\" style={{\"color\":\"red\",\"margin\":\"4px\"}}></i>\n                  Metamask Locked\n       </div>;\n    } else {\n          metam = <div className=\"metamask\">\n          <i className=\"fa fa-circle\" style={{\"color\":\"green\",\"margin\":\"4px\"}}></i>\n                  Metamask Unlocked\n       </div>;\n    }\n    return (\n      <div className=\"App\">\n        <Header/>\n         {metam}\n        <Form genrateToken={this.generateToken.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}